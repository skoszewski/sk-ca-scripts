#!/usr/bin/env bash
# vim: ts=4:sw=4:noet:ai

# Check for CA_ROOT variable
if [ -z "$CA_ROOT" ]
then
    echo "Please source the CA shell environment from the \"env.sh\" file."
    exit 1
fi

if [ -z "$1" ]
then
	echo "ERROR: The configuration name or a custom certificate request file not provided."
	exit 1
fi

REQFILE="$1"

if [ ! -f "$REQFILE" ]
then
	# The first argument is not a filename, maybe it is the configuration name?
	REQFILE="$CA_ROOT/requests/$1.pem"
	CERTFILE="$CA_ROOT/certs/$1.pem"
	
	if [ ! -f "$REQFILE"  ]
	then
		echo "ERROR: The certificate request does not exist."
		exit 1
	fi
else
	# put the certificate along side the request file, but change the extension to '.crt'.
	d=$(dirname "$REQFILE")
	f=$(basename -- "$REQFILE")
	CERTFILE="$d/${f%.*}.crt"
fi

if ! openssl req -noout -in $REQFILE 2>&-
then
	echo "ERROR: The certificate request file is invalid."
	exit 1
fi

CONFSECT=$2

case $CONFSECT in
	server) EXTSECT=v3_server ;;
	client) EXTSECT=v3_client ;;
	subca) EXTSECT=v3_subca ;;
	*) EXTSECT=v3_server ;;
esac

# Remove the old certificate, if exists
if [ -f $CERTFILE ]
then
	rm -f $CERFILE
fi

# Sign request
if openssl ca -in $REQFILE -extensions ${EXTSECT} -out $CERTFILE -config $CA_CONF
then
	# Check if the certificate has been created
	if [ -s $CERTFILE ]
	then
		# Remove request
		rm -f $REQFILE

		# Print information about the new certificate
		echo "The certificate has been issued and can be found in the file: $CERTFILE."
		# Print the fingerprint
		openssl x509 -noout -fingerprint -in $CERTFILE
	fi
else
	echo "ERROR: Something went wrong"
	exit 1
fi
